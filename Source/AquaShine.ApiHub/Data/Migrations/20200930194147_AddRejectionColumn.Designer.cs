// <auto-generated />
using System;
using AquaShine.ApiHub.Data.Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AquaShine.ApiHub.Data.Migrations
{
    [DbContext(typeof(DbDataContext))]
    [Migration("20200930194147_AddRejectionColumn")]
    partial class AddRejectionColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AquaShine.ApiHub.Data.Models.Entrant", b =>
                {
                    b.Property<string>("RowKey")
                        .HasColumnType("text");

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int>("BioGender")
                        .HasColumnType("integer");

                    b.Property<string>("ETag")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EntrantId")
                        .HasColumnType("integer");

                    b.Property<string>("EventbriteId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("boolean");

                    b.Property<int?>("SubmissionId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("RowKey");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("EntrantId")
                        .IsUnique();

                    b.HasIndex("EventbriteId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Entrants");
                });

            modelBuilder.Entity("AquaShine.ApiHub.Data.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DisplayImgUrl")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<bool>("Locked")
                        .HasColumnType("boolean");

                    b.Property<bool>("Rejected")
                        .HasColumnType("boolean");

                    b.Property<bool>("Show")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan?>("TimeToComplete")
                        .HasColumnType("interval");

                    b.Property<bool>("Verified")
                        .HasColumnType("boolean");

                    b.Property<string>("VerifyingImgUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Locked");

                    b.HasIndex("TimeToComplete");

                    b.HasIndex("Verified");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("AquaShine.ApiHub.Eventbrite.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AquaShine.ApiHub.Data.Models.Entrant", b =>
                {
                    b.HasOne("AquaShine.ApiHub.Eventbrite.Models.Address", "Address")
                        .WithOne()
                        .HasForeignKey("AquaShine.ApiHub.Data.Models.Entrant", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AquaShine.ApiHub.Data.Models.Submission", null)
                        .WithOne()
                        .HasForeignKey("AquaShine.ApiHub.Data.Models.Entrant", "EntrantId");

                    b.HasOne("AquaShine.ApiHub.Data.Models.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId");
                });
#pragma warning restore 612, 618
        }
    }
}
